<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yootii.bdy.bill.dao.BillMapper">
  <resultMap id="BaseResultMap" type="com.yootii.bdy.bill.model.Bill">
    <id column="billId" jdbcType="INTEGER" property="billId" />
    <result column="billNo" jdbcType="VARCHAR" property="billNo" />
    <result column="billType" jdbcType="VARCHAR" property="billType" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="custId" jdbcType="INTEGER" property="custId" />
    <result column="agencyId" jdbcType="INTEGER" property="agencyId" />
    <result column="customer" jdbcType="VARCHAR" property="customer" />
    <result column="agencyName" jdbcType="VARCHAR" property="agencyName" />
    <result column="startDate" jdbcType="DATE" property="startDate" />
    <result column="endDate" jdbcType="DATE" property="endDate" />
    <result column="groupName" jdbcType="VARCHAR" property="groupName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="createDate" jdbcType="DATE" property="createDate" />
    <result column="createDateStart" jdbcType="DATE" property="createDateStart" />
    <result column="createDateEnd" jdbcType="DATE" property="createDateEnd" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="createrFullname" jdbcType="VARCHAR" property="createrFullname" />
    <result column="discount" jdbcType="DECIMAL" property="discount" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="exchangeRate" jdbcType="DECIMAL" property="exchangeRate" />
    <result column="sum" jdbcType="DECIMAL" property="sum" />
    <result column="foreignSum" jdbcType="DECIMAL" property="foreignSum" />
    <result column="serviceCost" jdbcType="DECIMAL" property="serviceCost" />
    <result column="applyCost" jdbcType="DECIMAL" property="applyCost" />
    <result column="otherCost" jdbcType="DECIMAL" property="otherCost" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="billTitle" jdbcType="VARCHAR" property="billTitle" />
    <result column="contactId" jdbcType="INTEGER" property="contactId" />
    <result column="payAcountId" jdbcType="INTEGER" property="payAcountId" />
    <result column="coagencyId" jdbcType="INTEGER" property="coagencyId" />
    <result column="coagencyName" jdbcType="VARCHAR" property="coagencyName" />
    <result column="contactUserId" jdbcType="INTEGER" property="contactUserId" />
    <result column="receiverType" jdbcType="INTEGER" property="receiverType" />
    <association  property="contact" javaType="com.yootii.bdy.bill.model.CustomerContact" column="contactId" select="getContact"></association>
    <association  property="contactUser" javaType="com.yootii.bdy.model.User" column="contactUserId" select="getContactUser"></association>
    <association  property="payAcount" javaType="com.yootii.bdy.bill.model.PayAcount" column="payAcountId" select="getPayAcount"></association>
    <collection property="chargeRecords" ofType="com.yootii.bdy.bill.model.ChargeRecord" column="billId" select="getChargeRecords"></collection>
    <collection property="caseList" ofType="com.yootii.bdy.tmcase.model.CaseInfo" column="billId" select="getCaseList"></collection>
  </resultMap>
  <resultMap id="SimpleCountResultMap" type="java.util.HashMap">
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  <sql id="Base_Column_List">
    billId, billNo, billType, status, custId, agencyId, startDate, endDate, groupName, description, 
    createDate, creater, discount, currency, exchangeRate, sum, foreignSum, serviceCost, applyCost, 
    otherCost, memo, billTitle, contactId, payAcountId, coagencyId, contactUserId, receiverType
  </sql>
  <sql id="Base_Column_List_a">
    a.billId, a.billNo,a.billType, a.status, a.custId, a.agencyId, a.startDate, a.endDate, a.groupName, a.description, 
    a.createDate, a.creater,c.fullname as createrFullname, a.discount, a.currency, a.exchangeRate, a.sum, a.foreignSum, a.serviceCost, a.applyCost, 
    a.otherCost, a.memo, a.billTitle, a.contactId, a.payAcountId, a.coagencyId, a.contactUserId, a.receiverType, 
    b.name as customer, e.name as agencyName, f.name as coagencyName
  </sql>

  
  <sql id="Contact_Column_List" >
  	id, name, address, tel, email, postcode, custId
  </sql>
  <sql id="User_Column_List" >
  	userId, username, fullname, email, phone, sex, address
  </sql>
  <sql id="PayAcount_Column_List" >
  	payAcountId, payAcountName, bankAcountName, bankAcountAddress,
  	bankName, bankAcount, bankNo, swiftCode, agencyId
  </sql>
  <sql id="ChargeRecord_Column_List_a" >
  	a.chargeRecordId, a.agencyId, a.caseId, a.chargeItemId, a.descChn, a.descEng, a.price, a.number, 
    a.amount, a.creater, a.createTime, a.status, a.verifyPerson, a.verifyDate, b.fullname as createrFullname, 
    c.fullname as verifyFullname, d.chargeType, d.currency
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List_a" />
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    left join agency e on e.id=a.agencyId
    left join agency f on f.id=a.coagencyId
    where billId = #{billId,jdbcType=INTEGER}
  </select>
  <select id="getContact" parameterType="java.lang.Integer" resultType="com.yootii.bdy.bill.model.CustomerContact">
    SELECT 
    <include refid="Contact_Column_List" />
    FROM customer_contact
    where id = #{contactId,jdbcType=INTEGER}
  </select>
  <select id="getContactUser" parameterType="java.lang.Integer" resultType="com.yootii.bdy.model.User">
    SELECT 
    <include refid="User_Column_List" />
    FROM user
    where userId = #{contactUserId,jdbcType=INTEGER}
  </select>
  
  <select id="getPayAcount" parameterType="java.lang.Integer" resultType="com.yootii.bdy.bill.model.PayAcount">
    SELECT 
    <include refid="PayAcount_Column_List" />
    FROM pay_acount
    where payAcountId = #{payAcountId,jdbcType=INTEGER}
  </select>
  <select id="getChargeRecords" parameterType="java.lang.Integer" resultType="com.yootii.bdy.bill.model.ChargeRecord">
  	select 
 	<include refid="ChargeRecord_Column_List_a" />
	from charge_record a 
	left join bill_chargerecord bc on a.chargeRecordId = bc.chargeRecordId 
	left join user b on a.creater = b.username
	left join user c on a.verifyPerson = c.username
	left join charge_item d on a.chargeItemId = d.chargeItemId
	where bc.billId=#{billId,jdbcType=INTEGER}
  </select>
  
   <select id="getCaseList" parameterType="java.lang.Integer" resultType="com.yootii.bdy.tmcase.model.CaseInfo">
  	select a.agentNum from trademark_case a,  bill_case b
	where
	1=1
	and a.id=b.caseId
	and b.billId=#{billId,jdbcType=INTEGER}
  </select>
  
  
  
  
  <select id="selectBillForCust" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List_a" /> 
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
		left join agency_user d on a.agencyId = d.agencyId
		left join agency e on a.agencyId = e.id
		left join agency f on a.coagencyId = f.id
		left join user_customer g on a.custId=g.custId
	 	where g.userId =d.userId
	 	<if test="level!=null and level==0">
	 		and d.userId in (
			select d.userId
			from department a 
			left join user_department b on a.id = b.departmentId
			left join department c on a.id = c.parent
			left join user_department d on c.id = d.departmentId
			where a.level=#{level,jdbcType=INTEGER} and b.userId=#{userId,jdbcType=INTEGER} and d.userId is not null 
			union
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=#{level,jdbcType=INTEGER} )
	 	</if>
	 	<if test="level!=null and level==1">
	 		and d.userId in (
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=#{level,jdbcType=INTEGER} )
	 	</if>
	 	<if test="level==null">
	 		and d.userId=#{userId,jdbcType=INTEGER} 
	 	</if>
	 	<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
	    </if>
    </if>
    <if test="userId==null">
    	<bind name="bill.custId" value="bill.custId" />
    	left join agency e on e.id=a.agencyId
    	left join agency f on a.coagencyId = f.id
	 	where a.custId = #{bill.custId,jdbcType=INTEGER} and receiverType = 1
	 	<if test="bill.agencyId!=null">
	    <bind name="bill.agencyId" value="bill.agencyId" />
	    	and a.agencyId = #{bill.agencyId,jdbcType=INTEGER} 
	    </if>	
	    <![CDATA[ 
		 	and a.status<>'待审核'
		]]>    
    </if>
    <if test="daiban!=null">
	    <![CDATA[ 
		 	and a.status<>'已付款'
		]]>	
    </if>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (
				a.status = #{bill.status,jdbcType=VARCHAR} or
				b.name like #{bill.customer,jdbcType=VARCHAR} or
				c.fullname like #{bill.createrFullname,jdbcType=VARCHAR})
			</when>
			<otherwise>
			<if test="bill.status!=null and bill.status!=''">
				<bind name="bill.status" value="bill.status" />
				and a.status = #{bill.status,jdbcType=VARCHAR}
			</if>
			<if test="bill.customer!=null and bill.customer!=''">
				<bind name="bill.customer" value="'%'+bill.customer+'%'" />
				and b.name like #{bill.customer,jdbcType=VARCHAR}
			</if>
			<if test="bill.createrFullname!=null and bill.createrFullname!=''">
				<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
				and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
			</if>	
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
		<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.receiverType!=null and bill.receiverType!=''">
		<bind name="bill.receiverType" value="bill.receiverType" />
			and a.receiverType = #{bill.receiverType,jdbcType=INTEGER}
		</if>
		<if test="bill.coagencyId!=null and bill.coagencyId!=''">
		<bind name="bill.coagencyId" value="bill.coagencyId" />
			and a.coagencyId = #{bill.coagencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    	<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 	<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 
	 	<choose>
			<when test="gcon.orderCol != null and gcon.orderAsc!=null">
				<bind name="gcon.orderCol" value="gcon.orderCol" />
				<bind name="gcon.orderAsc" value="gcon.orderAsc" />
				order by ${gcon.orderCol} ${gcon.orderAsc}				
			</when>
			<otherwise>
				order by createDate desc				
			</otherwise>
		</choose>
		<bind name="gcon.offset" value="gcon.offset" />
		<bind name="gcon.rows" value="gcon.rows" />
			limit #{gcon.offset,jdbcType=INTEGER}, #{gcon.rows,jdbcType=INTEGER}
  </select>
  <select id="selectBillForCustCount" resultMap="SimpleCountResultMap">
    select count(*) as count
    from (
    select distinct a.billId
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
		left join agency_user d on a.agencyId = d.agencyId
		left join agency e on a.agencyId = e.id
		left join agency f on a.coagencyId = f.id
		left join user_customer g on a.custId=g.custId
	 	where g.userId =d.userId
	 	<if test="level!=null and level==0">
	 		and d.userId in (
			select d.userId
			from department a 
			left join user_department b on a.id = b.departmentId
			left join department c on a.id = c.parent
			left join user_department d on c.id = d.departmentId
			where a.level=0 and b.userId=#{userId,jdbcType=INTEGER} and d.userId is not null 
			union
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=0 )
	 	</if>
	 	<if test="level!=null and level==1">
	 		and d.userId in (
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=1 )
	 	</if>
	 	<if test="level==null">
	 		and d.userId=#{userId,jdbcType=INTEGER} 
	 	</if>
	 	<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
	    </if>
    </if>
    <if test="userId==null">
    	<bind name="bill.custId" value="bill.custId" />
    	left join agency e on e.id=a.agencyId
	 	where a.custId = #{bill.custId,jdbcType=INTEGER} and receiverType = 1
	 	<if test="bill.agencyId!=null">
	    <bind name="bill.agencyId" value="bill.agencyId" />
	    	and a.agencyId = #{bill.agencyId,jdbcType=INTEGER} 
	    </if>
	    <![CDATA[ 
		 	and a.status<>'待审核'
		]]>	   
    </if>
    <if test="daiban!=null">
	    <![CDATA[ 
		 	and a.status<>'已付款'
		]]>	
    </if>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (
				a.status = #{bill.status,jdbcType=VARCHAR} or
				b.name like #{bill.customer,jdbcType=VARCHAR} or
				c.fullname like #{bill.createrFullname,jdbcType=VARCHAR})
			</when>
			<otherwise>
			<if test="bill.status!=null and bill.status!=''">
				<bind name="bill.status" value="bill.status" />
				and a.status = #{bill.status,jdbcType=VARCHAR}
			</if>
			<if test="bill.customer!=null and bill.customer!=''">
				<bind name="bill.customer" value="'%'+bill.customer+'%'" />
				and b.name like #{bill.customer,jdbcType=VARCHAR}
			</if>
			<if test="bill.createrFullname!=null and bill.createrFullname!=''">
				<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
				and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
			</if>	
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
		<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.receiverType!=null and bill.receiverType!=''">
		<bind name="bill.receiverType" value="bill.receiverType" />
			and a.receiverType = #{bill.receiverType,jdbcType=INTEGER}
		</if>
		<if test="bill.coagencyId!=null and bill.coagencyId!=''">
		<bind name="bill.coagencyId" value="bill.coagencyId" />
			and a.coagencyId = #{bill.coagencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    	<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 	<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if>
    	) a
  	</select>
    <select id="coagencySelectBillMadeByAgency" resultMap="BaseResultMap">
    select distinct
    <include refid="Base_Column_List_a" /> 
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
		left join agency_user d on a.coagencyId = d.agencyId
		left join agency e on a.coagencyId = e.id
		left join agency f on a.agencyId = f.id
		left join user_customer g on a.custId=g.custId
	 	where g.userId =d.userId
	 	<if test="level!=null and level==0">
	 		and d.userId in (
			select d.userId
			from department a 
			left join user_department b on a.id = b.departmentId
			left join department c on a.id = c.parent
			left join user_department d on c.id = d.departmentId
			where a.level=0 and b.userId=#{userId,jdbcType=INTEGER} and d.userId is not null 
			union
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=0 )
	 	</if>
	 	<if test="level!=null and level==1">
	 		and d.userId in (
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=1 )
	 	</if>
	 	<if test="level==null">
	 		and d.userId=#{userId,jdbcType=INTEGER} 
	 	</if>
	 	<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
	    </if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <![CDATA[ 
		 and a.status<>'待审核'
	]]> 
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.agencyId!=null and bill.agencyId!=''">
			<bind name="bill.agencyId" value="bill.agencyId" />
			and a.agencyId = #{bill.agencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 
	 	<choose>
			<when test="gcon.orderCol != null and gcon.orderAsc!=null">
				<bind name="gcon.orderCol" value="gcon.orderCol" />
				<bind name="gcon.orderAsc" value="gcon.orderAsc" />
				order by ${gcon.orderCol} ${gcon.orderAsc}				
			</when>
			<otherwise>
				order by createDate desc				
			</otherwise>
		</choose>
		<bind name="gcon.offset" value="gcon.offset" />
		<bind name="gcon.rows" value="gcon.rows" />
			limit #{gcon.offset,jdbcType=INTEGER}, #{gcon.rows,jdbcType=INTEGER}
  </select>
  <select id="coagencySelectBillMadeByAgencyCount" resultMap="SimpleCountResultMap">
    select count(*) as count
    from (
    select distinct a.billId
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
		left join agency_user d on a.coagencyId = d.agencyId
		left join agency e on a.coagencyId = e.id
		left join agency f on a.agencyId = f.id
		left join user_customer g on a.custId=g.custId
	 	where g.userId =d.userId
	 	<if test="level!=null and level==0">
	 		and d.userId in (
			select d.userId
			from department a 
			left join user_department b on a.id = b.departmentId
			left join department c on a.id = c.parent
			left join user_department d on c.id = d.departmentId
			where a.level=0 and b.userId=#{userId,jdbcType=INTEGER} and d.userId is not null 
			union
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=0 )
	 	</if>
	 	<if test="level!=null and level==1">
	 		and d.userId in (
			select a.userId
			from user_department a
			left join department b on a.departmentId=b.id
			left join user_department c on b.id = c.departmentId
			where c.userId=#{userId,jdbcType=INTEGER} and b.level=1 )
	 	</if>
	 	<if test="level==null">
	 		and d.userId=#{userId,jdbcType=INTEGER} 
	 	</if>
	 	<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
	    </if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <![CDATA[ 
		 and a.status<>'待审核'
	]]>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.agencyId!=null and bill.agencyId!=''">
			<bind name="bill.agencyId" value="bill.agencyId" />
			and a.agencyId = #{bill.agencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 
    	) a
  	</select>
  
  
  <select id="adminSelectBillForCust" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List_a" />
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
	    left join agency_user d on a.agencyId = d.agencyId
		left join agency e on a.agencyId = e.id
		left join agency f on a.coagencyId = f.id
		where d.userId=#{userId,jdbcType=INTEGER} 
		<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
    	</if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <if test="daiban!=null">
	    <![CDATA[ 
		 	and a.status<>'已付款'
		]]>	
    </if>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>				
			</otherwise>
		</choose>	
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>				
		<if test="bill.receiverType!=null and bill.receiverType!=''">
			<bind name="bill.receiverType" value="bill.receiverType" />
			and a.receiverType = #{bill.receiverType,jdbcType=INTEGER}
		</if>
		<if test="bill.coagencyId!=null and bill.coagencyId!=''">
			<bind name="bill.coagencyId" value="bill.coagencyId" />
			and a.coagencyId = #{bill.coagencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 	
	 	<choose>
			<when test="gcon.orderCol != null and gcon.orderAsc!=null">
				<bind name="gcon.orderCol" value="gcon.orderCol" />
				<bind name="gcon.orderAsc" value="gcon.orderAsc" />
				order by ${gcon.orderCol} ${gcon.orderAsc}				
			</when>
			<otherwise>
				order by createDate desc				
			</otherwise>
		</choose>
		<bind name="gcon.offset" value="gcon.offset" />
		<bind name="gcon.rows" value="gcon.rows" />
			limit #{gcon.offset,jdbcType=INTEGER}, #{gcon.rows,jdbcType=INTEGER}
  </select>
  <select id="adminSelectBillForCustCount" resultMap="SimpleCountResultMap">
    select count(*) as count
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
	    left join agency_user d on a.agencyId = d.agencyId
		left join agency e on a.agencyId = e.id
		left join agency f on a.coagencyId = f.id
		where d.userId=#{userId,jdbcType=INTEGER} 
		<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
    	</if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <if test="daiban!=null">
	    <![CDATA[ 
		 	and a.status<>'已付款'
		]]>	
    </if>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />							
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>				
			</otherwise>
		</choose>	
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>				
		<if test="bill.receiverType!=null and bill.receiverType!=''">
			<bind name="bill.receiverType" value="bill.receiverType" />
			and a.receiverType = #{bill.receiverType,jdbcType=INTEGER}
		</if>
		<if test="bill.coagencyId!=null and bill.coagencyId!=''">
			<bind name="bill.coagencyId" value="bill.coagencyId" />
			and a.coagencyId = #{bill.coagencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 	
  </select>
  <select id="adminSelectBillMadeByAgency" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List_a" />
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
	    left join agency_user d on a.coagencyId = d.agencyId
		left join agency e on a.coagencyId = e.id
		left join agency f on a.agencyId = f.id
		where d.userId=#{userId,jdbcType=INTEGER} 
		<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
    	</if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <![CDATA[ 
		 and a.status<>'待审核'
	]]>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>				
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.agencyId!=null and bill.agencyId!=''">
			<bind name="bill.agencyId" value="bill.agencyId" />
			and a.agencyId = #{bill.agencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 
	 	<choose>
			<when test="gcon.orderCol != null and gcon.orderAsc!=null">
				<bind name="gcon.orderCol" value="gcon.orderCol" />
				<bind name="gcon.orderAsc" value="gcon.orderAsc" />
				order by ${gcon.orderCol} ${gcon.orderAsc}				
			</when>
			<otherwise>
				order by createDate desc				
			</otherwise>
		</choose>
		<bind name="gcon.offset" value="gcon.offset" />
		<bind name="gcon.rows" value="gcon.rows" />
			limit #{gcon.offset,jdbcType=INTEGER}, #{gcon.rows,jdbcType=INTEGER}
  </select>
  <select id="adminSelectBillMadeByAgencyCount" resultMap="SimpleCountResultMap">
    select count(*) as count
    from bill a 
    left join customer b on a.custId=b.id
    left join user c on a.creater=c.username
    <if test="userId!=null">
	    left join agency_user d on a.coagencyId = d.agencyId
		left join agency e on a.coagencyId = e.id
		left join agency f on a.agencyId = f.id
		where d.userId=#{userId,jdbcType=INTEGER} 
		<if test="bill.custId!=null">
	    <bind name="bill.custId" value="bill.custId" />
		 	and a.custId = #{bill.custId,jdbcType=INTEGER} 
    	</if>
    </if>
    <if test="userId==null">
     where 1=1
    </if>
    <![CDATA[ 
		 and a.status<>'待审核'
	]]>
    	<choose>
			<when test="gcon.keyword!=null and gcon.keyword!=''">
				<bind name="gcon.keyword" value="'%' + gcon.keyword + '%'" />
				and (				
				a.status like #{gcon.keyword,jdbcType=VARCHAR} or
				b.name like #{gcon.keyword,jdbcType=VARCHAR} or
				c.fullname like #{gcon.keyword,jdbcType=VARCHAR})
			</when>
			<otherwise>
				<if test="bill.status!=null and bill.status!=''">
					<bind name="bill.status" value="bill.status" />
					and a.status = #{bill.status,jdbcType=VARCHAR}
				</if>
				<if test="bill.customer!=null and bill.customer!=''">
					<bind name="bill.customer" value="'%'+bill.customer+'%'" />
					and b.name like #{bill.customer,jdbcType=VARCHAR}
				</if>
				<if test="bill.createrFullname!=null and bill.createrFullname!=''">
					<bind name="bill.createrFullname" value="'%'+bill.createrFullname+'%'" />
					and c.fullname like #{bill.createrFullname,jdbcType=VARCHAR}
				</if>				
			</otherwise>
		</choose>
		<if test="bill.billType!=null and bill.billType!=''">
			<bind name="bill.billType" value="'%' + bill.billType + '%'" />
			and a.billType like #{bill.billType,jdbcType=VARCHAR}
		</if>
		<if test="bill.description!=null and bill.description!=''">
			<bind name="bill.description" value="'%'+bill.description+'%'" />
			and a.description like #{bill.description,jdbcType=VARCHAR}
		</if>
		<if test="bill.groupName!=null and bill.groupName!=''">
			<bind name="bill.groupName" value="'%'+bill.groupName+'%'" />
			and a.groupName like #{bill.groupName,jdbcType=VARCHAR}
		</if>		
		<if test="bill.memo!=null and bill.memo!=''">
			<bind name="bill.memo" value="'%'+bill.memo+'%'" />
			and a.memo like #{bill.memo,jdbcType=VARCHAR}
		</if>		
		<if test="bill.agencyId!=null and bill.agencyId!=''">
			<bind name="bill.agencyId" value="bill.agencyId" />
			and a.agencyId = #{bill.agencyId,jdbcType=INTEGER}
		</if>
		<if test="bill.createDateStart != null">
    		<bind name="bill.createDateStart" value="bill.createDateStart" />
			<![CDATA[ 
			and  a.createDate > #{bill.createDateStart,jdbcType=TIMESTAMP}
			]]>
	 	</if> 
	 	<if test="bill.createDateEnd != null">
	 		<bind name="bill.createDateEnd" value="bill.createDateEnd" />
			<![CDATA[ 
			and  a.createDate < #{bill.createDateEnd,jdbcType=TIMESTAMP}
			]]>				
	 	</if> 
  </select>
  
  
  <select id="checkRole" parameterType="int"
	resultType="string">
	select a.name 
	from role a
	left join user_role b on a.id=b.roleId
	where b.userId=#{id}
  </select>
  <select id="selectAgencyIdByUserId" parameterType="int"
	resultType="int">
	select agencyId 
	from agency_user
	where userId = #{userId}
	limit 1
  </select>
  <select id="selectMaxBillNo" parameterType="int" resultType="string">
	select max(billNo) as max
	from bill
	where agencyId = (select agencyId from bill where billId = #{billId,jdbcType=INTEGER} )
	and substring(billNo,1,4) = DATE_FORMAT(NOW(), '%Y');
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bill
    where billId = #{billId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yootii.bdy.bill.model.Bill">
    insert into bill (billId, billNo, billType, status, 
      custId, agencyId, startDate, endDate, 
      groupName, description, 
      createDate, creater, discount, 
      currency, exchangeRate, sum, foreignSum,
      serviceCost, applyCost, otherCost, 
      memo, billTitle, contactId, 
      payAcountId, coagencyId, contactUserId, receiverType)
    values (#{billId,jdbcType=INTEGER}, #{billNo,jdbcType=VARCHAR}, #{billType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{custId,jdbcType=INTEGER}, #{agencyId,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{groupName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=DATE}, #{creater,jdbcType=VARCHAR}, #{discount,jdbcType=DECIMAL}, 
      #{currency,jdbcType=VARCHAR}, #{exchangeRate,jdbcType=DECIMAL}, #{sum,jdbcType=DECIMAL},#{foreignSum,jdbcType=DECIMAL},  
      #{serviceCost,jdbcType=DECIMAL}, #{applyCost,jdbcType=DECIMAL}, #{otherCost,jdbcType=DECIMAL}, 
      #{memo,jdbcType=VARCHAR}, #{billTitle,jdbcType=VARCHAR}, #{contactId,jdbcType=INTEGER}, 
      #{payAcountId,jdbcType=INTEGER},#{coagencyId,jdbcType=INTEGER}, #{contactUserId,jdbcType=INTEGER}, #{receiverType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yootii.bdy.bill.model.Bill" useGeneratedKeys="true" keyProperty="billId">
    insert into bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        billId,
      </if>
      <if test="billNo != null">
        billNo,
      </if>
      <if test="billType != null">
        billType,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="custId != null">
        custId,
      </if>
      <if test="agencyId != null">
        agencyId,
      </if>
      <if test="startDate != null">
        startDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="groupName != null">
        groupName,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="exchangeRate != null">
        exchangeRate,
      </if>
      <if test="sum != null">
        sum,
      </if>
      <if test="foreignSum != null">
        foreignSum,
      </if>
      <if test="serviceCost != null">
        serviceCost,
      </if>
      <if test="applyCost != null">
        applyCost,
      </if>
      <if test="otherCost != null">
        otherCost,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="billTitle != null">
        billTitle,
      </if>
      <if test="contactId != null">
        contactId,
      </if>
      <if test="payAcountId != null">
        payAcountId,
      </if>
      <if test="coagencyId != null">
        coagencyId,
      </if>
      <if test="contactUserId != null">
        contactUserId,
      </if>
      <if test="receiverType != null">
        receiverType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="billId != null">
        #{billId,jdbcType=INTEGER},
      </if>
      <if test="billNo != null">
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="agencyId != null">
        #{agencyId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="foreignSum != null">
        #{foreignSum,jdbcType=DECIMAL},
      </if>
      <if test="serviceCost != null">
        #{serviceCost,jdbcType=DECIMAL},
      </if>
      <if test="applyCost != null">
        #{applyCost,jdbcType=DECIMAL},
      </if>
      <if test="otherCost != null">
        #{otherCost,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="billTitle != null">
        #{billTitle,jdbcType=VARCHAR},
      </if>
      <if test="contactId != null">
        #{contactId,jdbcType=INTEGER},
      </if>
      <if test="payAcountId != null">
        #{payAcountId,jdbcType=INTEGER},
      </if>
      <if test="coagencyId != null">
        #{coagencyId,jdbcType=INTEGER},
      </if>
      <if test="contactUserId != null">
        #{contactUserId,jdbcType=INTEGER},
      </if>
      <if test="receiverType != null">
        #{receiverType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yootii.bdy.bill.model.Bill">
    update bill
    <set>
      <if test="billNo != null">
        billNo = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="billType != null">
        billType = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        custId = #{custId,jdbcType=INTEGER},
      </if>
      <if test="agencyId != null">
        agencyId = #{agencyId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        startDate = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=DATE},
      </if>
      <if test="groupName != null">
        groupName = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=DATE},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        exchangeRate = #{exchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="sum != null">
        sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="foreignSum != null">
        foreignSum = #{foreignSum,jdbcType=DECIMAL},
      </if>
      <if test="serviceCost != null">
        serviceCost = #{serviceCost,jdbcType=DECIMAL},
      </if>
      <if test="applyCost != null">
        applyCost = #{applyCost,jdbcType=DECIMAL},
      </if>
      <if test="otherCost != null">
        otherCost = #{otherCost,jdbcType=DECIMAL},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="billTitle != null">
        billTitle = #{billTitle,jdbcType=VARCHAR},
      </if>
      <if test="contactId != null">
        contactId = #{contactId,jdbcType=INTEGER},
      </if>
      <if test="payAcountId != null">
        payAcountId = #{payAcountId,jdbcType=INTEGER},
      </if>
      <if test="coagencyId != null">
        coagencyId = #{coagencyId,jdbcType=INTEGER},
      </if>
      <if test="contactUserId != null">
        contactUserId = #{contactUserId,jdbcType=INTEGER},
      </if>
      <if test="receiverType != null">
        receiverType = #{receiverType,jdbcType=INTEGER},
      </if>
    </set>
    where billId = #{billId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yootii.bdy.bill.model.Bill">
    update bill
    set billNo= #{billNo,jdbcType=VARCHAR},
      billType = #{billType,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      custId = #{custId,jdbcType=INTEGER},
      agencyId = #{agencyId,jdbcType=INTEGER},
      startDate = #{startDate,jdbcType=DATE},
      endDate = #{endDate,jdbcType=DATE},
      groupName = #{groupName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=DATE},
      creater = #{creater,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      exchangeRate = #{exchangeRate,jdbcType=DECIMAL},
      sum = #{sum,jdbcType=DECIMAL},
      foreignSum = #{foreignSum,jdbcType=DECIMAL},
      serviceCost = #{serviceCost,jdbcType=DECIMAL},
      applyCost = #{applyCost,jdbcType=DECIMAL},
      otherCost = #{otherCost,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      billTitle = #{billTitle,jdbcType=VARCHAR},
      contactId = #{contactId,jdbcType=INTEGER},
      payAcountId = #{payAcountId,jdbcType=INTEGER},
      coagencyId = #{coagencyId,jdbcType=INTEGER},
      contactUserId = #{contactUserId,jdbcType=INTEGER},
      receiverType = #{receiverType,jdbcType=INTEGER}
    where billId = #{billId,jdbcType=INTEGER}
  </update>
    <select id="generateBillByCases" resultMap="BaseResultMap">
    select
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
		and a.status=0 and b.chargeType='服务费') as serviceCost
		,
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
	 	and a.status=0 and b.chargeType='官费') as applyCost
		,
		(select b.caseType from charge_record a 
		left join trademark_case b on a.caseId=b.id where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
 		and a.status=0 limit 1) as billType
		,
		(select max(h.value) 
		from charge_record a 
		left join trademark_case c on a.caseId=c.id
		left join discount h on h.agencyId=a.agencyId and h.custId=c.custId and h.caseType=c.caseType 
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>		
		and a.status=0
		) as discount
		,
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
		and a.status=0 and b.chargeType='服务费')*
		(select max(h.value) 
		from charge_record a 
		left join trademark_case c on a.caseId=c.id
		left join discount h on h.agencyId=a.agencyId and h.custId=c.custId and h.caseType=c.caseType 
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
 		and a.status=0
		) +
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
 		and a.status=0 and b.chargeType='官费') as sum
		,c.name customer,b.custId 
		from charge_record a
		left join trademark_case b on a.caseId=b.id
		left join customer c on b.custId=c.id
		where a.caseId in 
		<foreach collection="array" index="caseIdArr" item="caseId" open="(" separator="," close=")">
            #{caseId}
    	</foreach>
 		and a.status=0 group by c.name,b.custId
		;
  </select>
  <select id="generateBillByChargeRecords" resultMap="BaseResultMap">
    select
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
		and a.status=0 and b.chargeType='服务费') as serviceCost
		,
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
	 	and a.status=0 and b.chargeType='官费') as applyCost
		,
		(select b.caseType from charge_record a 
		left join trademark_case b on a.caseId=b.id 
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
 		and a.status=0 limit 1) as billType
		,
		(select max(h.value) 
		from charge_record a 
		left join trademark_case c on a.caseId=c.id
		left join discount h on h.agencyId=a.agencyId and h.custId=c.custId and h.caseType=c.caseType 
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>		
		and a.status=0
		) as discount
		,
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
		and a.status=0 and b.chargeType='服务费')*
		(select max(h.value) 
		from charge_record a 
		left join trademark_case c on a.caseId=c.id
		left join discount h on h.agencyId=a.agencyId and h.custId=c.custId and h.caseType=c.caseType 
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
 		and a.status=0
		) +
		(select sum(a.amount) 
		from charge_record a 
		left join charge_Item b on a.chargeItemId=b.chargeItemId
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
 		and a.status=0 and b.chargeType='官费') as sum
		,c.name customer,b.custId 
		from charge_record a
		left join trademark_case b on a.caseId=b.id
		left join customer c on b.custId=c.id
		where a.chargeRecordId in 
		<foreach collection="array" index="chargeRecordIdArr" item="chargeRecordId" open="(" separator="," close=")">
            #{chargeRecordId}
    	</foreach>
 		and a.status=0 group by c.name,b.custId
		;
  </select>
</mapper>