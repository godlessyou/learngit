<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yootii.bdy.task.dao.MailRecordMapper" >
  <resultMap id="BaseResultMap" type="com.yootii.bdy.task.model.MailRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="caseId" property="caseId" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="sendTime" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="sendFrom" property="sendFrom" jdbcType="VARCHAR" />
    <result column="sendTo" property="sendTo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, caseId, subject, content, sendTime, sendFrom, sendTo
  </sql>
  <select id="getMailRecordList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mail_record
    where caseId = #{caseId,jdbcType=INTEGER}
    order by sendTime desc
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mail_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mail_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yootii.bdy.task.model.MailRecord" >
    insert into mail_record (id, caseId, subject, 
      content, sendTime, sendFrom, 
      sendTo)
    values (#{id,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{sendFrom,jdbcType=VARCHAR}, 
      #{sendTo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yootii.bdy.task.model.MailRecord" >
    insert into mail_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="caseId != null" >
        caseId,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="sendTime != null" >
        sendTime,
      </if>
      <if test="sendFrom != null" >
        sendFrom,
      </if>
      <if test="sendTo != null" >
        sendTo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFrom != null" >
        #{sendFrom,jdbcType=VARCHAR},
      </if>
      <if test="sendTo != null" >
        #{sendTo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yootii.bdy.task.model.MailRecord" >
    update mail_record
    <set >
      <if test="caseId != null" >
        caseId = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        sendTime = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFrom != null" >
        sendFrom = #{sendFrom,jdbcType=VARCHAR},
      </if>
      <if test="sendTo != null" >
        sendTo = #{sendTo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yootii.bdy.task.model.MailRecord" >
    update mail_record
    set caseId = #{caseId,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      sendTime = #{sendTime,jdbcType=TIMESTAMP},
      sendFrom = #{sendFrom,jdbcType=VARCHAR},
      sendTo = #{sendTo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>